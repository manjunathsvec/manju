Git class -1 (22.10.2022)
start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

----------------------------------------***********************************************---------------------------------------------

Git class-2 (23.10.2022)

1. git clone <repository-url> : Clones/Downloads the existing repository from github
2. git branch <new branch name> : Creates a new branch in the workspace which can be then pushed to central repo
3. git checkout <existing branch name>: Jump to mentioned branch 
4. git checkout -b <new branch name>: Create a new branch and jump to that branch
5. git status : Checks which files are modified and whether they are added to staging and are committed committed to loacal repo. 
6. git add <file name> : adds the files in the workspace to staging
7. git commit -m "meaningful comment" --> move the files in the staging to local repo
8. git log --> list what changes has been done by which user.
9. git config --global user.name "<userName>" --> add the username
10. git config --global user.mail "<emailID>" --> adds the emailID
11. git push origin <branch name> --> Push the local repo changes to the central repo.
12. git blame --> checks who committed what changes.



Assignments: 
1. create a github account and generate a token
2. Create collaborators/team members in the github
3. Create a pull request in github
4. Create a repo in the local and push it to github


Git class-3 (26.10.2022)
1. git pull <repo-url>
2. git fetch <repo-url>
3. git clone = git pull + git fetch
4. git stash --> stash/hide the changes
5. git stash pop --> unstash/unhide the changes
6. branch renaming
7. git merge
8. git rebase
9. git tag -a "tag-name" -m "message" (assignment)
10. git revert
11. git reset


Assignments:
1. git tag
2. Difference between merge and rebase(try commands)
3. git squash
4. git cherrypick
5. difference between pull and fetch



